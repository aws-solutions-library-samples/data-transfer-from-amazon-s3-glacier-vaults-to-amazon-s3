; Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
; SPDX-License-Identifier: Apache-2.0

[tox]
env_list =
    lint
    type
    py3{10,11,12}
minversion = 4.0.13

[testenv:lint]
description = run lint checks
skip_install = true
deps =
    isort==5.13.2
    black==23.12.1
    pytest==7.4.3
    moto==4.1.15
commands =
    isort --check source
    black --check source
    pytest source/tests/header.py
    pytest source/tests/mock_glacier_data.py

[testenv:type]
description = run type checks
package = wheel
wheel_build_env = .pkg
extras =
    dev
deps =
    mypy==1.7.1
commands =
    mypy --strict source

[testenv:py3{10,11,12}]
description = run the tests with pytest
package = wheel
wheel_build_env = .pkg
extras =
    dev
commands =
    pytest source/tests/unit {posargs}

[testenv:build]
description = build package
skip_install = true
deps =
    build
commands =
    python -m build

[testenv:integration]
description = run integration tests
package = wheel
wheel_build_env = .pkg
pass_env =
    *
extras =
    dev
commands =
    pytest source/tests/integration -k="not cloudwatch_dashboard" {posargs}

[testenv:bandit]
description = run bandit scan
deps =
    bandit
commands =
    # fails the scan if high severity issues are encountered. Can be expanded to support failure on medium severity issues.
    bandit -c pyproject.toml -r source -lll

[testenv:pip-audit]
description = run pip-audit scan
deps =
    pip-audit
commands =
    # this assumes pyproject.toml is in the current directory
    pip-audit . --desc